Sun 03 Oct 2021 06:12:45 PM PDT
Linux csslab9h 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux
uid=1198638(ropitz) gid=2121198638(ropitz) groups=2121198638(ropitz),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Hello World
Fact 5: 120
Done.
=====================================================
3. clang-tidy warnings are fixed
=====================================================
10856 warnings generated.
21730 warnings generated.
Suppressed 21730 warnings (21730 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./factorial.cpp
Running clang-format on ./main.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==119535== Memcheck, a memory error detector
==119535== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==119535== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==119535== Command: ./a.out
==119535== Parent PID: 119442
==119535== 
==119535== 
==119535== HEAP SUMMARY:
==119535==     in use at exit: 40 bytes in 1 blocks
==119535==   total heap usage: 3 allocs, 2 frees, 76,840 bytes allocated
==119535== 
==119535== LEAK SUMMARY:
==119535==    definitely lost: 40 bytes in 1 blocks
==119535==    indirectly lost: 0 bytes in 0 blocks
==119535==      possibly lost: 0 bytes in 0 blocks
==119535==    still reachable: 0 bytes in 0 blocks
==119535==         suppressed: 0 bytes in 0 blocks
==119535== Rerun with --leak-check=full to see details of leaked memory
==119535== 
==119535== For counts of detected and suppressed errors, rerun with: -v
==119535== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/NETID/ropitz/342/hello-factorial/factorial.cpp':
Name                        Regions    Miss   Cover     Lines    Miss   Cover
-----------------------------------------------------------------------------
fact(int)                         7       1  85.71%        10       3  70.00%
memoryLeakFunction()              4       0 100.00%        11       0 100.00%
-----------------------------------------------------------------------------
TOTAL                            11       1  90.91%        21       3  85.71%

File '/home/NETID/ropitz/342/hello-factorial/main.cpp':
Name                        Regions    Miss   Cover     Lines    Miss   Cover
-----------------------------------------------------------------------------
test01()                          1       0 100.00%         4       0 100.00%
test02()                          1       0 100.00%         4       0 100.00%
main                              1       0 100.00%         8       0 100.00%
-----------------------------------------------------------------------------
TOTAL                             3       0 100.00%        16       0 100.00%
=====================================================
The lines below were never executed
=====================================================
   20|      0|  // cout << "Too large: " << n << endl;
   21|      0|  return -1;
   22|      0|}
Sun 03 Oct 2021 06:13:03 PM PDT
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
